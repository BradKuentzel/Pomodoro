{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19418\\\\Desktop\\\\Thinkful\\\\projects\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Controls from \"../Controls\";\nimport Play from \"../Play\";\nimport Timer from \"../Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pomodoro() {\n  _s();\n\n  const [focus, setFocus] = useState(25);\n  const [breakTime, setBreak] = useState(5);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [countdown, setCountdown] = useState(1500);\n  const [status, setStatus] = useState(\"Focusing\");\n  const [clockStop, setClockStop] = useState(true);\n  const [disableControls, setDisableControls] = useState(false);\n  const [stopDisable, setStopDisable] = useState(true);\n  useInterval(() => {\n    setCountdown(countdown - 1);\n\n    if (countdown <= 0) {\n      //alarm.play()\n      if (status === 'Focusing') {\n        setStatus('On Break');\n        setCountdown(breakTime * 60);\n      } else if (status === 'On Break') {\n        setStatus('Focusing');\n        setCountdown(focus * 60);\n      }\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  const handleReset = () => {\n    setFocus(25);\n    setBreak(5);\n    setCountdown(1500);\n    setStatus('Focusing');\n    setIsTimerRunning(false);\n    setClockStop(true);\n  };\n\n  const playPause = () => {\n    setIsTimerRunning(prevState => !prevState);\n    setClockStop(false);\n    setDisableControls(true);\n    setStopDisable(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      focus: focus,\n      setFocus: setFocus,\n      breakTime: breakTime,\n      setBreak: setBreak,\n      setCountdown: setCountdown,\n      disableControls: disableControls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Play, {\n      isTimerRunning: isTimerRunning,\n      playPause: playPause,\n      handleReset: handleReset,\n      stopDisable: stopDisable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      status: status,\n      countdown: countdown,\n      setCountdown: setCountdown,\n      focus: focus,\n      breakTime: breakTime,\n      isTimerRunning: isTimerRunning,\n      clockStop: clockStop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pomodoro, \"U7t25kfssHBOYojPV6cifnlbBqw=\", false, function () {\n  return [useInterval];\n});\n\n_c = Pomodoro;\nexport default Pomodoro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"sources":["C:/Users/19418/Desktop/Thinkful/projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Controls","Play","Timer","Pomodoro","focus","setFocus","breakTime","setBreak","isTimerRunning","setIsTimerRunning","countdown","setCountdown","status","setStatus","clockStop","setClockStop","disableControls","setDisableControls","stopDisable","setStopDisable","handleReset","playPause","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Controls from \"../Controls\";\nimport Play from \"../Play\";\nimport Timer from \"../Timer\";\n\nfunction Pomodoro() {\n  const [focus, setFocus] = useState(25)\n  const [breakTime, setBreak] = useState(5)\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [countdown, setCountdown] = useState(1500)\n  const [status, setStatus] = useState(\"Focusing\")\n  const [clockStop, setClockStop] = useState(true)\n  const [disableControls, setDisableControls] = useState(false)\n  const [stopDisable, setStopDisable] = useState(true)\n  \n  useInterval(\n    () => {\n      setCountdown(countdown - 1)\n      if (countdown <= 0) {\n        //alarm.play()\n        if (status === 'Focusing') {\n          setStatus('On Break')\n          setCountdown(breakTime * 60)\n        } else if (status === 'On Break') {\n          setStatus('Focusing')\n          setCountdown(focus * 60)\n        }\n      }\n    },\n    isTimerRunning ? 1000 : null\n  )\n\n  const handleReset = () => {\n    setFocus(25)\n    setBreak(5)\n    setCountdown(1500)\n    setStatus('Focusing')\n    setIsTimerRunning(false)\n    setClockStop(true)\n  }\n\n  const playPause = () => {\n    setIsTimerRunning((prevState) => !prevState);\n    setClockStop(false)\n    setDisableControls(true)\n    setStopDisable(false)\n  }\n  \n  return (\n    <div className=\"pomodoro\">\n    <Controls \n    focus={focus}\n    setFocus={setFocus}\n    breakTime={breakTime}\n    setBreak={setBreak}\n    setCountdown={setCountdown}\n    disableControls={disableControls}\n      />\n    <Play \n      isTimerRunning={isTimerRunning}\n      playPause={playPause}\n      handleReset={handleReset}\n      stopDisable={stopDisable}\n      />  \n    <Timer\n    status={status}\n    countdown={countdown} \n    setCountdown={setCountdown} \n    focus={focus} \n    breakTime={breakTime} \n    isTimerRunning={isTimerRunning}\n    clockStop={clockStop} \n      />  \n    </div>\n  );\n}\n\nexport default Pomodoro;\n\n\n"]},"metadata":{},"sourceType":"module"}