{"version":3,"sources":["utils/duration/index.js","Controls.js","Play.js","utils/class-names/index.js","Timer.js","old_telephone.mp3","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","Controls","focus","breakTime","setFocus","setBreak","setCountdown","disableControls","className","data-testid","type","onClick","prevTime","max","disabled","min","Play","classNameToBoolean","isTimerRunning","handleReset","playPause","stopDisable","role","aria-label","title","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","Timer","status","countdown","clockStop","paused","clock","percentage","style","height","aria-valuemin","aria-valuemax","aria-valuenow","width","Pomodoro","useState","setIsTimerRunning","setStatus","setClockStop","setDisableControls","setStopDisable","setPaused","myAudio","useRef","alarm","Audio","soundfile","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","play","prevState","ref","src","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5e9fb47.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\"\nimport {minutesToDuration} from \"./utils/duration\"\n\nexport default function Controls({focus, breakTime, setFocus, setBreak, setCountdown, disableControls}) {\n\n  \nconst focusDecrease = () => {\n    setFocus((prevTime) => Math.max(5, prevTime - 5))\n    setCountdown((prevTime) => Math.max(300, prevTime - 5 * 60))\n  }\n  const focusIncrease = () => {\n    setFocus((prevTime) => Math.min(60, prevTime + 5))\n    setCountdown((prevTime) => Math.min(3600, prevTime + 5 * 60))\n  }\n  const breakTimeDecrease = () => {\n    setBreak((prevTime) => Math.max(1, prevTime - 1))\n  }\n  const breakTimeIncrease = () => {\n    setBreak((prevTime) => Math.min(15, prevTime + 1))\n  }\n\n\n\n\n  return(\n    <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {minutesToDuration(focus)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={focusDecrease}\n                disabled={disableControls}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={focusIncrease}\n                disabled={disableControls}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {minutesToDuration(breakTime)}\n              </span>\n              <div className=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={breakTimeDecrease}\n                  disabled={disableControls}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={breakTimeIncrease}\n                  disabled={disableControls}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}","import React from \"react\";\nimport classNames from \"./utils/class-names\"\n\nexport default function Play({isTimerRunning, handleReset, playPause, stopDisable}) {\n  \n\n  return (\n    <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={handleReset}\n              disabled={stopDisable}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n  )\n}","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"./utils/duration\"\n\nexport default function Timer({\n  status, \n  countdown,  \n  focus, \n  breakTime, \n  clockStop,\n  paused\n}) {\n\n\n  \nconst clock = status === \"On Break\" ? breakTime : focus; \nconst percentage =\n    ((clock * 60 - countdown) / (clock * 60)) * 100\n  \nif(!clockStop) {\n  return (\n    <div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\"> {status} for {minutesToDuration(clock)} minutes</h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(countdown)} remaining\n          </p>\n        </div>\n      </div>\n      <h2>{paused}</h2>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percentage} \n                style={{ width: `${percentage}%` }} \n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      )\n    } else {\n    return null\n  }\n} ","export default __webpack_public_path__ + \"static/media/old_telephone.384a6051.mp3\";","import React, { useState, useRef } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport Controls from \"../Controls\";\nimport Play from \"../Play\";\nimport Timer from \"../Timer\";\nimport soundfile from \"../old_telephone.mp3\"\n\nfunction Pomodoro() {\n  const [focus, setFocus] = useState(25)\n  const [breakTime, setBreak] = useState(5)\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [countdown, setCountdown] = useState(1500)\n  const [status, setStatus] = useState(\"Focusing\")\n  const [clockStop, setClockStop] = useState(true)\n  const [disableControls, setDisableControls] = useState(false)\n  const [stopDisable, setStopDisable] = useState(true)\n  const [paused, setPaused] = useState(\"PAUSED\")\n  const myAudio = useRef();\n  const alarm = new Audio(soundfile);\n  \n  useInterval(\n    () => {\n      setCountdown(countdown - 1)\n      if (countdown <= 0) {\n        alarm.play()\n        if (status === 'Focusing') {\n          setStatus('On Break')\n          setCountdown(breakTime * 60)\n        } else if (status === 'On Break') {\n          setStatus('Focusing')\n          setCountdown(focus * 60)\n        }\n      }\n    },\n    isTimerRunning ? 1000 : null\n  )\n\n  const handleReset = () => {\n    setFocus(25)\n    setBreak(5)\n    setCountdown(1500)\n    setStatus('Focusing')\n    setIsTimerRunning(false)\n    setClockStop(true)\n    setDisableControls(false)\n    setStopDisable(true)\n    setPaused(\"\")\n  }\n\n  const playPause = () => {\n    setPaused((prevState)=> !prevState);\n    setIsTimerRunning((prevState) => !prevState);\n    setClockStop(false)\n    setDisableControls(true)\n    setStopDisable(false)\n  }\n  \n  return (\n    <div className=\"pomodoro\">\n    <Controls \n    focus={focus}\n    setFocus={setFocus}\n    breakTime={breakTime}\n    setBreak={setBreak}\n    setCountdown={setCountdown}\n    disableControls={disableControls}\n      />\n    <Play \n      isTimerRunning={isTimerRunning}\n      playPause={playPause}\n      handleReset={handleReset}\n      stopDisable={stopDisable}\n      />  \n    <Timer\n    status={status}\n    countdown={countdown} \n    setCountdown={setCountdown} \n    focus={focus} \n    breakTime={breakTime} \n    paused={paused}\n    clockStop={clockStop} \n      />\n      <audio id='alarm' ref={myAudio} src={alarm} type='audio/mp3'></audio> \n    </div>\n  );\n}\n\nexport default Pomodoro;\n\n\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}