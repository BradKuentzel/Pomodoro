{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19418\\\\Desktop\\\\Thinkful\\\\projects\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\Timer.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"./utils/duration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer({\n  status,\n  countdown,\n  focus,\n  breakTime,\n  clockStop,\n  paused\n}) {\n  const clock = status === \"On Break\" ? breakTime : focus;\n  const percentage = (clock * 60 - countdown) / (clock * 60) * 100;\n\n  if (!clockStop) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"session-title\",\n            children: [\" \", status, \" for \", minutesToDuration(clock), \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            \"data-testid\": \"session-sub-title\",\n            children: [secondsToDuration(countdown), \" remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: paused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            style: {\n              height: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              role: \"progressbar\",\n              \"aria-valuemin\": \"0\",\n              \"aria-valuemax\": \"100\",\n              \"aria-valuenow\": percentage,\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/19418/Desktop/Thinkful/projects/Project_Pomodoro_Timer_Qualified_1/src/Timer.js"],"names":["React","minutesToDuration","secondsToDuration","Timer","status","countdown","focus","breakTime","clockStop","paused","clock","percentage","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,kBAAnD;;AAEA,eAAe,SAASC,KAAT,CAAe;AAC5BC,EAAAA,MAD4B;AAE5BC,EAAAA,SAF4B;AAG5BC,EAAAA,KAH4B;AAI5BC,EAAAA,SAJ4B;AAK5BC,EAAAA,SAL4B;AAM5BC,EAAAA;AAN4B,CAAf,EAOZ;AAIH,QAAMC,KAAK,GAAGN,MAAM,KAAK,UAAX,GAAwBG,SAAxB,GAAoCD,KAAlD;AACA,QAAMK,UAAU,GACX,CAACD,KAAK,GAAG,EAAR,GAAaL,SAAd,KAA4BK,KAAK,GAAG,EAApC,CAAD,GAA4C,GADhD;;AAGA,MAAG,CAACF,SAAJ,EAAe;AACb,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAI,2BAAY,eAAhB;AAAA,4BAAkCJ,MAAlC,WAA+CH,iBAAiB,CAACS,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,MAAb;AAAoB,2BAAY,mBAAhC;AAAA,uBACGR,iBAAiB,CAACG,SAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA,cATF,eAUI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAE;AAAEG,cAAAA,MAAM,EAAE;AAAV,aAAjC;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,cAAA,IAAI,EAAC,aAFP;AAGE,+BAAc,GAHhB;AAIE,+BAAc,KAJhB;AAKE,+BAAeD,UALjB;AAME,cAAA,KAAK,EAAE;AAAEE,gBAAAA,KAAK,EAAG,GAAEF,UAAW;AAAvB;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BG,GA5BL,MA4BW;AACP,WAAO,IAAP;AACD;AACF;KA9CuBR,K","sourcesContent":["import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"./utils/duration\"\n\nexport default function Timer({\n  status, \n  countdown,  \n  focus, \n  breakTime, \n  clockStop,\n  paused\n}) {\n\n\n  \nconst clock = status === \"On Break\" ? breakTime : focus; \nconst percentage =\n    ((clock * 60 - countdown) / (clock * 60)) * 100\n  \nif(!clockStop) {\n  return (\n    <div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\"> {status} for {minutesToDuration(clock)} minutes</h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(countdown)} remaining\n          </p>\n        </div>\n      </div>\n      <h2>{paused}</h2>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percentage} \n                style={{ width: `${percentage}%` }} \n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      )\n    } else {\n    return null\n  }\n} "]},"metadata":{},"sourceType":"module"}